# Default values for tranzrmoves.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  defaultStorageClass: "synology-iscsi-delete"

# Namespace override
namespaceOverride: "tranzr-moves"

# Deployments configuration
deployments:
  gateway:
    name: tranzr-gateway
    enabled: true
    replicaCount: 1
    image:
      repository: ghcr.io/tranz-r/api-gateway
      pullPolicy: IfNotPresent
      tag: "0.17.6"
    
    # Container port configuration
    containerPort: 8080
    
    # Regular environment variables (plain values)
    env:
      - name: LOG_LEVEL
        value: "info"
      - name: PORT
        value: "8080"
      - name: NODE_ENV
        value: "production"
    
    # Environment variables from External Secrets
    envFromSecrets:
      - name: SUPER_BASE_JWT_SECRET_KEY
        secretKey: supabase-jwt-secret-key
      - name: SUPER_BASE_PROJECT_ID
        secretKey: supabase-project-id
    
    # Resource configuration
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    
    # Probes configuration
    livenessProbe:
      httpGet:
        path: /healthz
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
    
    readinessProbe:
      httpGet:
        path: /ready
        port: http
      initialDelaySeconds: 15
      periodSeconds: 15
    
    # Autoscaling configuration
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80

  backend:
    name: tranzr-service
    enabled: true
    replicaCount: 1
    image:
      repository: ghcr.io/tranz-r/tranzr-moves-services
      pullPolicy: IfNotPresent
      tag: "0.10.1"
    
    # Container port configuration
    containerPort: 8080
    
    # Regular environment variables (plain values)
    env:
      - name: LOG_LEVEL
        value: "debug"
      - name: PORT
        value: "8080"
      - name: NODE_ENV
        value: "production"
      - name: CACHE_TTL
        value: "300"
      - name: AWS_SES_SMTP_PORT
        value: "587"
      - name: FROM_EMAIL
        value: "bookings@tranzrmoves.com"
      - name: FROM_NAME
        value: "Tranzr Moves"
      - name: AWS_DEFAULT_REGION
        value: "eu-west-2"
      - name: AWS_REGION
        value: "eu-west-2"
      - name: MAPBOX_BASE_URL
        value: "https://api.mapbox.com"
      - name: CHECKOUT_SESSION_SUCCESS_URL
        value: "https://tranzrmoves.com/checkout/success?session_id={CHECKOUT_SESSION_ID}"
      - name: CHECKOUT_SESSION_CANCEL_URL
        value: "https://tranzrmoves.com/checkout/cancel"
    
    # Environment variables from External Secrets
    envFromSecrets:
      - name: STRIPE_API_KEY
        secretKey: tranzr-stripe-api-key
      - name: SUPABASE_URL
        secretKey: supabase-url
      - name: SUPABASE_KEY
        secretKey: supabase-key
      - name: ADDRESS_API_KEY
        secretKey: getaddressio-address-api-key
      - name: ADDRESS_ADMINISTRATION_KEY
        secretKey: getaddressio-address-administration-key
      - name: TRANZR_STRIPE_WEBHOOK_SIGNING_SECRET
        secretKey: tranzr-stripe-webhook-signing-secret
      - name: AWS_SES_SMTP_HOST
        secretKey: aws-ses-smtp-host
      - name: AWS_SES_SMTP_USERNAME
        secretKey: aws-ses-smtp-username
      - name: AWS_SES_SMTP_PASSWORD
        secretKey: aws-ses-smtp-password
      - name: AWS_ACCESS_KEY_ID
        secretKey: aws-access-key-id
      - name: AWS_SECRET_ACCESS_KEY
        secretKey: aws-secret-access-key
      - name: ConnectionStrings__TranzrMovesDatabaseConnection
        secretKey: tranzr-supabase-database-connection-string
      - name: MAPBOX_TOKEN
        secretKey: mapbox-token
      - name: AZURE_STORAGE_CONNECTION_STRING
        secretKey: tranzr-azure-storage-connection-string
      - name: COMMUNICATION_SERVICES_CONNECTION_STRING
        secretKey: tranzr-communication-services-connection-string
    
    # Resource configuration
    resources:
      requests:
        cpu: 300m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    
    # Probes configuration
    livenessProbe:
      httpGet:
        path: /healthz
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
    
    readinessProbe:
      httpGet:
        path: /ready
        port: http
      initialDelaySeconds: 5
      periodSeconds: 5
    
    # Autoscaling configuration
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 15
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80

# Image pull secrets configuration
imagePullSecrets:
  - name: github-registry-secret

# Service accounts configuration
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod configuration
podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Services configuration
services:
  gateway:
    name: tranzr-gateway
    type: ClusterIP
    port: 80
    targetPort: 8080
    protocol: TCP
  
  backend:
    name: tranzr-service
    type: ClusterIP
    port: 80
    targetPort: 8080
    protocol: TCP

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "tranzr-letsencrypt-production"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  hosts:
    - host: api.tranzrmoves.com
      paths:
        - path: /
          pathType: Prefix
          serviceName: tranzr-gateway
          servicePort: 80
  tls: []
    # - secretName: tranzr-gateway-tls
    #   hosts:
    #     - api.tranzrmoves.com

# Consolidated External Secrets configuration
externalSecrets:
  enabled: true
  name: tranzrmoves-secrets
  refreshInterval: "1h"
  secretStoreRef:
    name: azure-kv-cluster-store
    kind: ClusterSecretStore
  
  # GitHub registry configuration
  githubRegistry:
    usernameKey: github-registry-username
    tokenKey: github-registry-token
  
  # Create separate image pull secret (dockerconfigjson type)
  createImagePullSecret: true
  
  # Application secrets - add all your application secrets here
  # Simple direct mapping from Azure Key Vault to Kubernetes secret
  applicationSecrets:
    # Gateway secrets - currently none configured
    - secretKey: supabase-jwt-secret-key
      description: "Supabase JWT signing secret"
      remoteRef:
        key: supabase-jwt-secret-key
    - secretKey: supabase-project-id
      description: "Supabase project ID"
      remoteRef:
        key: supabase-project-id
    
    # Backend secrets
    - secretKey: tranzr-stripe-api-key
      description: "Stripe API key for payment processing"
      remoteRef:
        key: tranzr-stripe-api-key
    - secretKey: supabase-url
      description: "Supabase database URL"
      remoteRef:
        key: supabase-url
    - secretKey: supabase-key
      description: "Supabase service key"
      remoteRef:
        key: supabase-key
    - secretKey: getaddressio-address-api-key
      description: "GetAddress.io API key"
      remoteRef:
        key: getaddressio-address-api-key
    - secretKey: getaddressio-address-administration-key
      description: "GetAddress.io administration key"
      remoteRef:
        key: getaddressio-address-administration-key
    - secretKey: tranzr-stripe-webhook-signing-secret
      description: "Stripe webhook signing secret"
      remoteRef:
        key: tranzr-stripe-webhook-signing-secret
    - secretKey: aws-ses-smtp-host
      description: "AWS SES SMTP host"
      remoteRef:
        key: aws-ses-smtp-host
    - secretKey: aws-ses-smtp-username
      description: "AWS SES SMTP username"
      remoteRef:
        key: aws-ses-smtp-username
    - secretKey: aws-ses-smtp-password
      description: "AWS SES SMTP password"
      remoteRef:
        key: aws-ses-smtp-password
    - secretKey: aws-access-key-id
      description: "AWS access key ID"
      remoteRef:
        key: aws-access-key-id
    - secretKey: aws-secret-access-key
      description: "AWS secret access key"
      remoteRef:
        key: aws-secret-access-key
    - secretKey: mapbox-token
      description: "Mapbox token"
      remoteRef:
        key: mapbox-token
    - secretKey: tranzr-azure-storage-connection-string
      description: "Azure storage connection string"
      remoteRef:
        key: tranzr-azure-storage-connection-string
    - secretKey: tranzr-communication-services-connection-string
      description: "Communication services connection string"
      remoteRef:
        key: tranzr-communication-services-connection-string
    
    # Database secrets
    - secretKey: tranzr-supabase-database-connection-string
      description: "PostgreSQL database connection string"
      remoteRef:
        key: tranzr-supabase-database-connection-string
    - secretKey: tranzr-supabase-database-host
      description: "PostgreSQL database host"
      remoteRef:
        key: tranzr-supabase-database-host

# Node selector, tolerations, and affinity
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - tranzrmoves
          topologyKey: kubernetes.io/hostname

# Jobs configuration
jobs:
  dbMigration:
    enabled: true
    backoffLimit: 3
    image:
      repository: ghcr.io/tranz-r/tranzr-moves-db-migrator
      pullPolicy: IfNotPresent
      tag: "0.10.0"  # Should match the backend service version
    restartPolicy: Never
    database:
      port: 5432
    

    
    # Init container resources
    initContainer:
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
    
    # Main container resources
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    
    # Regular environment variables (plain values)
    env:
      - name: ASPNETCORE_ENVIRONMENT
        value: "Production"
      - name: LOG_LEVEL
        value: "Information"
      - name: TRANZR_SUPABASE_DATABASE_PORT
        value: "5432"
    
    # Environment variables from External Secrets
    envFromSecrets:
      - name: DB_CONNECTION_STRING
        secretKey: tranzr-supabase-database-connection-string
      - name: TRANZR_SUPABASE_DATABASE_HOST
        secretKey: tranzr-supabase-database-host

# Additional volumes and volume mounts
volumes: []
volumeMounts: []


chatwoot:
  # Disable bundled Postgres & Redis; we'll use external ones
  postgresql:
    enabled: false
  redis:
    enabled: false
    host: redis-master.redis-system.svc.cluster.local
    port: 6379

  # Reference to existing Kubernetes Secret that holds all environment variables.
  # This Secret should contain keys like:
  #   POSTGRES_HOST, POSTGRES_PORT, POSTGRES_USERNAME, POSTGRES_PASSWORD,
  #   REDIS_HOST, REDIS_PASSWORD, SECRET_KEY_BASE, SMTP_ADDRESS, SMTP_USERNAME, SMTP_PASSWORD
  existingEnvSecret: chatwoot-env-secrets

  # Non-sensitive environment configuration
  env:
    RAILS_ENV: production
    INSTALLATION_ENV: helm
    ACTIVE_STORAGE_SERVICE: microsoft        # https://developers.chatwoot.com/self-hosted/deployment/storage/supported-providers
    ENABLE_ACCOUNT_SIGNUP: "false"       # disable public signup
    FORCE_SSL: "true"
    FRONTEND_URL: "https://chat.tranzrmoves.com"
    RAILS_LOG_TO_STDOUT: "true"
    RAILS_MAX_THREADS: "5"
    USE_INBOX_AVATAR_FOR_BOT: "true"
    MAILER_SENDER_EMAIL: "tranzrchat@tranzrmoves.com"
    POSTGRES_HOST: "aws-1-eu-west-2.pooler.supabase.com"
    SMTP_PORT: "587"
    SMTP_TLS: "Enabled"
    SMTP_SSL: "Enabled"
    POSTGRES_PORT: "5432"
    POSTGRES_DATABASE: "postgres"
    SMTP_ADDRESS: "smtp.azurecomm.net"
    AZURE_STORAGE_CONTAINER: "chatwoot"
    AZURE_STORAGE_ACCOUNT_NAME: "tranzrmovessa"

  # Web application deployment configuration
  web:
    replicaCount: 2
    hpa:
      enabled: true
      cputhreshold: 80
      minpods: 1
      maxpods: 3
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1Gi

  # Background worker deployment configuration
  worker:
    replicaCount: 2
    hpa:
      enabled: true
      cputhreshold: 80
      minpods: 2
      maxpods: 5
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1Gi

  # Internal service configuration (ClusterIP)
  services:
    name: chatwoot
    type: ClusterIP
    internalPort: 3000
    targetPort: 3000

  service:
    type: ClusterIP
    port: 80

  # Ingress configuration (adjust to your ingress controller)
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
      cert-manager.io/cluster-issuer: "tranzr-letsencrypt-production"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: chat.tranzrmoves.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chatwoot
                port:
                  number: 3000
    tls: []

  # Database migration job
  hooks:
    migrate:
      env: []
      hookAnnotation: "post-install,post-upgrade"
      resources:
        requests:
          memory: 1000Mi
        limits:
          memory: 1000Mi

  # Optional scheduling and security context
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}


  # --- External Secrets configuration ---
  externalSecrets:
    enabled: true
    name: chatwoot-env-secrets
    refreshInterval: "1h"
    secretStoreRef:
      name: azure-kv-cluster-store
      kind: ClusterSecretStore
    
    # Chatwoot secrets - add your chatwoot-specific secrets here
    secrets:
      - secretKey: DATABASE_URL
        description: "Chatwoot database URL"
        remoteRef:
          key: chatwoot-postgres-database-url
      # - secretKey: POSTGRES_HOST
      #   description: "Chatwoot Postgres host"
      #   remoteRef:
      #     key: chatwoot-postgres-host
      # - secretKey: POSTGRES_PORT
      #   description: "Chatwoot Postgres port"
      #   remoteRef:
      #     key: chatwoot-postgres-port
      # - secretKey: POSTGRES_USERNAME
      #   description: "Chatwoot Postgres username"
      #   remoteRef:
      #     key: chatwoot-postgres-username
      # - secretKey: POSTGRES_PASSWORD
      #   description: "Chatwoot Postgres password"
      #   remoteRef:
      #     key: chatwoot-postgres-password
      # - secretKey: POSTGRES_DATABASE
      #   description: "Chatwoot Postgres database"
      #   remoteRef:
      #     key: chatwoot-postgres-database
      - secretKey: SECRET_KEY_BASE
        description: "Chatwoot secret key base"
        remoteRef:
          key: chatwoot-secret-key-base

      # Redis secrets
      # - secretKey: REDIS_HOST
      #   description: "Chatwoot Redis host"
      #   remoteRef:
      #     key: chatwoot-redis-host
      # - secretKey: REDIS_PORT
      #   description: "Chatwoot Redis port"
      #   remoteRef:
      #     key: chatwoot-redis-port
      - secretKey: REDIS_PASSWORD
        description: "Chatwoot Redis password"
        remoteRef:
          key: redis-password

      # SMTP secrets
      # - secretKey: SMTP_ADDRESS
      #   description: "Chatwoot SMTP address"
      #   remoteRef:
      #     key: chatwoot-smtp-address
      - secretKey: SMTP_USERNAME
        description: "Chatwoot SMTP username"
        remoteRef:
          key: acs-smtp-username
      - secretKey: SMTP_PASSWORD
        description: "Chatwoot SMTP password"
        remoteRef:
          key: acs-smtp-password

      # Azure Blob Storage secrets
      # - secretKey: AZURE_STORAGE_ACCOUNT_NAME
      #   description: "Azure Blob Storage account name"
      #   remoteRef:
      #     key: azure-storage-account-name
      - secretKey: AZURE_STORAGE_ACCESS_KEY
        description: "Azure Blob Storage access key"
        remoteRef:
          key: chatwoot-azure-storage-access-key
      # - secretKey: AZURE_STORAGE_CONTAINER
      #   description: "Azure Blob Storage container name"
      #   remoteRef:
      #     key: azure-storage-container
